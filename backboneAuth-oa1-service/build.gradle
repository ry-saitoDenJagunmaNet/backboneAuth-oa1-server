plugins {
    id 'java'
    id 'org.springframework.boot'
    id "io.spring.dependency-management"
}
apply plugin: "io.spring.dependency-management"
group 'net.jagunma.backbone.auth'
version '20.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}
bootJar {
    enabled = false
}
jar {
    enabled = true
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    implementation project(':backboneAuth-model')
    implementation project(':backboneAuth-oa1-infra')
    testImplementation project(':backboneAuth-oa1-remoting-mock')
    testImplementation project(':backboneAuth-oa1-mock')

    api "net.jagunma.backbone.shared:shared-data-interface:${sharedDataInterfaceVersion}"
    api "net.jagunma.backbone.run:backbone-interface:${backboneInterfaceVersion}"
    api("net.jagunma.backbone.auth:backboneAuth-dao-server:${backboneAuthDaoVersion}"){
        exclude group: "net.jagunma.common2020"
        exclude group: "com.microsoft.sqlserver"
    }
    api( "net.jagunma.common2020:jagunma-common-server:${commonServerVersion}"){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter'
    }
    api "org.seasar.doma:doma-core:${domaCoreVersion}"
    implementation("org.springframework.boot:spring-boot-starter-aop")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    api 'org.springframework.boot:spring-boot-starter-jdbc'
    api 'org.springframework.boot:spring-boot-starter-web'
    api "org.springframework.boot:spring-boot-devtools"
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'
    annotationProcessor "org.seasar.doma:doma-processor:${domaVersion}"
    testRuntimeOnly "ch.qos.logback:logback-classic:${logbackClassicVersion}"
    testRuntimeOnly "ch.qos.logback:logback-core:${logbackCoreVersion}"
    runtimeOnly "org.slf4j:slf4j-api:${sf4jApiVersion}"

}

task copyDomaResources(type: Copy, dependsOn: processResources) {
    from processResources.destinationDir
    into compileJava.destinationDir
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

compileJava.dependsOn copyDomaResources

