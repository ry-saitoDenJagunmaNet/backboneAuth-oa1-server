plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id 'jacoco'
    id 'org.springframework.boot'
    id "io.spring.dependency-management"
}


group 'net.jagunma.backbone.auth'
version '20.0.1-SNAPSHOT'

bootJar {
    enabled = false
}
jar {
    enabled = true
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    implementation project(':backboneAuth-model')
    implementation("net.jagunma.common2020:jagunma-common-fao:$commonFaoVersion")
    implementation("net.jagunma.backbone.auth:backboneAuth-dao-server:${backboneAuthDaoVersion}"){
        exclude group: "net.jagunma.common2020"
        exclude group: "com.microsoft.sqlserver"
    }
    implementation "net.jagunma.backbone.shared:shared-data-interface:${sharedDataInterfaceVersion}"
    testImplementation project(":backboneAuth-oa1-remoting-mock")
    implementation "org.seasar.doma:doma-core:${domaVersion}"
    runtimeOnly "com.microsoft.sqlserver:mssql-jdbc:${mssqlJdbcVersion}"
    annotationProcessor "org.seasar.doma:doma-processor:${domaVersion}"
    testRuntimeOnly "ch.qos.logback:logback-classic:${logbackClassicVersion}"
    testRuntimeOnly "ch.qos.logback:logback-core:${logbackCoreVersion}"
    runtimeOnly "org.slf4j:slf4j-api:${sf4jApiVersion}"
    implementation("org.springframework.boot:spring-boot-starter-aop")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation "org.apache.poi:poi-ooxml:${poiOoxmlVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "redis.clients:jedis:${jedisVersion}"

}

task copyDomaResources(type: Copy, dependsOn: processResources) {
    from processResources.destinationDir
    into compileJava.destinationDir
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

compileJava.dependsOn copyDomaResources
